plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
    /* Spring Boot 기본 웹 모듈 (JSP 지원을 위해 `spring-boot-starter-web`만 추가)
    *
    */
    implementation 'org.springframework.boot:spring-boot-starter-web'
    
    // Spring Validation 검증 프레임워크
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    
    // JSP 및 JSTL 관련 의존성 추가
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper' // JSP 지원
    implementation 'jakarta.servlet:jakarta.servlet-api' // Servlet API
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api' // JSTL API
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl' // JSTL 구현체

	// MyBatis와 MySQL 연결
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	implementation 'com.mysql:mysql-connector-j'
	
	// Mybatis에서 DB로 전송하는 SQL문 확인
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
    
    // livereload를 위한 개발환경
    implementation  'org.springframework.boot:spring-boot-devtools'
	
	// Socket 
    implementation 'org.springframework.boot:spring-boot-starter-websocket' // WebSocket
    implementation 'org.springframework:spring-messaging' // Messaging (STOMP 메시지 처리를 위한 의존성)
    implementation 'org.springframework:spring-websocket' // SockJS (WebSocket을 지원하지 않는 브라우저를 위한 fallback)
	
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
